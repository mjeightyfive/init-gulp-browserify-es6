@mixin vertically-center($child: '.vcentered') {
    display: table;

    & > #{$child} {
        display: table-cell;
        vertical-align: middle;
    }
}

// retina images
@mixin image-2x($image, $width, $height) {
    @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6 / 2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {
        // on retina, use image that's scaled by 2
        background-image: url($image);
        background-size: $width $height;
    }
}

// div.logo {
//    background: url('logo.png') no-repeat;
//    @include image-2x('logo2x.png', 100, 25px);
//  }

@mixin clearfix {
    &:before,
    &:after {
        content: '';
        display: table;
    }

    &:after {
        clear: both;
    }
}

// .article {
//      @include clearfix();
// }

@mixin box-sizing($box-model: border-box) {
    box-sizing: $box-model;
}

// *,
// *:after,
// *:before {
//   @include box-sizing(border-box);
// }

@mixin border-radius($radius) {
    border-radius: $radius;
    background-clip: padding-box; // stops bg color from leaking outside the border
}

// Single side border-radius
@mixin border-top-radius($radius) {
    border-top-right-radius: $radius;
    border-top-left-radius: $radius;
    background-clip: padding-box;
}

@mixin border-right-radius($radius) {
    border-bottom-right-radius: $radius;
    border-top-right-radius: $radius;
    background-clip: padding-box;
}

@mixin border-bottom-radius($radius) {
    border-bottom-right-radius: $radius;
    border-bottom-left-radius: $radius;
    background-clip: padding-box;
}

@mixin border-left-radius($radius) {
    border-bottom-left-radius: $radius;
    border-top-left-radius: $radius;
    background-clip: padding-box;
}

// .button {
//   @include border-radius(5px);
// }

// .submit-button {
//   @include border-top-radius(10);
//   @include border-right-radius(8px);
//   @include border-bottom-radius(10);
//   @include border-left-radius (6px);
// }

@mixin box-emboss($opacity, $opacity2) {
    box-shadow: white($opacity) 0 1px 0, inset black($opacity2) 0 1px 0;
}

// .box{
//     @include box-emboss(.8, .05);
// }

$init-default-shadow-grey: #ccc;

@mixin letterpress($opacity: .5) {
    text-shadow: white($opacity) 0 1px 0;
}

@mixin box-shadow($horizontal: 0, $vertical: 1px, $blur: 2px, $color: $init-default-shadow-grey) {
    box-shadow: $horizontal $vertical $blur $color;
}

@mixin inset-box-shadow($horizontal: 0, $vertical: 1px, $blur: 2px, $color: $init-default-shadow-grey) {
    box-shadow: inset $horizontal $vertical $blur $color;
}

// FONT FACE

@mixin font-face($name, $filename, $svg_id, $style: normal, $weight: normal) {
    @font-face {
        font-family: '#{$name}';
        font-style: $style;
        font-weight: $weight;
        src: font-url('#{$filename}.eot');
        src: font-url('#{$filename}.eot?#iefix') format('embedded-opentype'), font-url('#{$filename}.woff') format('woff'), font-url('#{$filename}.ttf') format('truetype'), font-url('#{$filename}.svg##{$svg_id}') format('svg');
    }
}

@mixin font-size($sizeValue: 12) {
    font-size: $sizeValue + px; //fallback for old browsers
    font-size: .125 * $sizeValue + rem;
}

// body {
//   @include font-size(16);
// }

@mixin line-height($heightValue: 12) {
    line-height: $heightValue + px; //fallback for old browsers
    line-height: .125 * $heightValue + rem;
}

// body {
//   @include line-height (16);
// }

// SHADOW

@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0, 0, 0, .4)) {
    text-shadow: $x $y $blur $color;
}

// TRANSFORM

@mixin transform($params) {
    transform: $params;
}

// TRANSITION

@mixin transition($what: all, $length: 1s, $easing: ease-in-out) {
    transition: $what $length $easing;
}

// links
@mixin link-colors($normal, $hover: false, $active: false, $visited: false, $focus: false) {
    color: $normal;

    @if $visited {
        &:visited {
            color: $visited;
        }
    }

    @if $focus {
        &:focus {
            color: $focus;
        }
    }

    @if $hover {
        &:hover {
            color: $hover;
        }
    }

    @if $active {
        &:active {
            color: $active;
        }
    }
}
